---
import Logo from '@svg/MainLogo.astro';
import MenuBars from '@svg/Symbols/MenuBars.astro';
import MenuClose from '@svg/Symbols/MenuClose.astro';

const homeLink = new URL('./',Astro.site).toString();

export interface Props {
  navLinks: { title: string; href: string }[];
  navLinksHighlighted: { title: string; href: string }[];
}

const { navLinks, navLinksHighlighted } = Astro.props;
---

<header class='bg-bgLight text-fontLight dark:bg-bgDark dark:text-fontDark'>
  <!-- Skip Navigation Links -->
  <a
    class='skip-nav-link bg-bgLight text-light dark:bg-bgDark dark:text-dark'
    href='#main-content'>Skip to main content</a
  >

  <div class='header_content_wrapper'>
    <!-- Logo -->
    <a aria-label='home' href={homeLink}>
      <Logo
        class=''
        ariaLabel='Catalin Petrovici LogoType'
        width='44'
        height='30'
      />
    </a>

    <!-- Mobile Handburger -->
    <button
      type='button'
      class='block md:hidden mobile-nav-toggle bg-bgLight text-light dark:bg-bgDark dark:text-dark'
      aria-controls='primary-navigation'
      aria-label='Toggle navigation'
      aria-expanded='false'
    >
      <MenuBars class='mobile-menu-bars' height='40' width='40' />
      <MenuClose class='hidden mobile-menu-close' height='40' width='40' />
      <span class='mobile-menu-text sr-only'>Menu</span>
    </button>

    <!-- Navigation -->
    <nav
      id='primary-navigation'
      data-visible='false'
      aria-label="Primary Navigation"
      class='hidden md:block primary-navigation bg-bgLight dark:bg-bgDark'
    >
      <ul class='md:text-fontLightGray2 md:dark:text-fontDarkGray2'>
        {
          navLinks.map((item) => {
            const { title, href } = item;

            return (
              <li>
                <a
                  class='primary-navigation-link border-b-2 border-fontDarkGray4 hover:bg-inherit hover:text-btnLight dark:hover:text-btnDark'
                  href={href}
                >
                  {title}
                </a>
              </li>
            );
          })
        }
        {
          navLinksHighlighted.map((item) => {
            const { title, href } = item;

            return (
              <li>
                <a
                  class='primary-navigation-link contact border-2 bg-btnLight border-btnLight dark:bg-btnDark dark:border-btnDark dark:text-btnFont hover:bg-transparent hover:text-fontLight dark:hover:text-fontDark md:hover:text-btnLight md:dark:hover:text-btnDark'
                  href={href}
                >
                  {title}
                </a>
              </li>
            );
          })
        }
      </ul>
    </nav>
  </div>
</header>

<style>
  header {
    position: sticky;
    display: flex;
    top: 0;
    width: 100%;
    max-width: 100%;
    z-index: 101;
  }

  .header_content_wrapper {
    width: 100%;
    min-height: var(--header-height);
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding-left: var(--padding-layout-left);
    padding-right: var(--padding-layout-right);
  }

  .skip-nav-link {
    position: absolute;
    z-index: 300;
    left: 0.5rem;
    padding: 0.5rem 1.5rem;
    font-size: clamp(1.6rem, 5.5vw, 1.8rem);
    font-weight: 600;
    transform: translateY(-100%);
    transition: transform 325ms ease-in;
  }

  .skip-nav-link:focus {
    transform: translateY(0);
  }

  .primary-navigation {
    display: block;
    position: fixed;
    visibility: visible;
    width: 100%;
    max-width: 100vw;
    padding-top: 1rem;
    padding-left: var(--padding-layout-left);
    padding-right: var(--padding-layout-right);
    z-index: 200;
    left: 0;
    right: 0;
    top: calc(var(--header-height) - 1px);
    bottom: 0;
    overflow-y: scroll;
    -webkit-overflow-scrolling: touch;
    transition: transform 325ms ease-in;
  }

  .primary-navigation[data-visible='true'] {
    transform: translate(0%);
  }

  .primary-navigation[data-visible='false'] {
    transform: translate(110%);
  }

  .primary-navigation-link {
    font-size: clamp(1.8rem, 5.5vw, 2rem);
    display: flex;
    align-items: center;
    cursor: pointer;
    min-height: 6rem;
    width: 100%;
    transition: all 200ms ease-in-out;
  }

  .contact {
    margin-top: 3rem;
    display: inline-block;
    padding: 1.5rem 2.5rem;
    border-radius: 10px;
    font-weight: 600;
    width: auto;
  }

  @media screen and (min-width: 710px) {
    .primary-navigation {
      padding-top: 0;
      display: flex;
      position: static;
      visibility: visible;
      width: 100%;
      max-width: 100vw;
      padding-left: 0;
      padding-right: 0;
      overflow-y: visible;
      -webkit-overflow-scrolling: auto;
      transition: transform 325ms ease-in;
    }

    .primary-navigation[data-visible='false'] {
      transform: translate(0);
    }

    .primary-navigation ul {
      display: flex;
      margin-left: auto;
    }

    .primary-navigation-link {
      font-size: 1.6rem;
      align-items: center;
      margin-left: 4rem;
      cursor: pointer;
      min-height: 6rem;
      width: 100%;
      transition: background-color, color 200ms ease-in-out;
      border-bottom: none;
    }

    .contact {
      background-color: transparent;
      color: inherit;
      display: flex;
      margin-top: 0;
      padding: 0;
      border: 0;
      border-radius: 0;
      font-weight: 300;
    }
  }

  .mobile-nav-toggle {
    width: 4rem;
    aspect-ratio: 1;
    transition: background-image 100ms ease-in;
  }

  .mobile-nav-toggle[aria-expanded='true'] .mobile-menu-bars {
    display: none;
  }

  .mobile-nav-toggle[aria-expanded='false'] .mobile-menu-bars {
    display: block;
  }

  .mobile-nav-toggle[aria-expanded='true'] .mobile-menu-close {
    display: block;
  }

  .mobile-nav-toggle[aria-expanded='false'] .mobile-menu-close {
    display: none;
  }
</style>

<script>
  const navToggleButton = document.querySelector(
    '.mobile-nav-toggle'
  )! as HTMLButtonElement;
  const primaryNavigation = document.querySelector(
    '.primary-navigation'
  )! as HTMLDivElement;
  const linksNavigation = document.querySelectorAll(
    '.primary-navigation-link'
  )! as NodeListOf<Element>;
  const textMenuMobile = document.querySelector(
    '.mobile-menu-text'
  )! as HTMLSpanElement;

  navToggleButton.addEventListener('click', (event) => {
    event.preventDefault();
    const visibility = primaryNavigation.getAttribute('data-visible');

    if (visibility === 'false') {
      primaryNavigation.setAttribute('data-visible', 'true');
      navToggleButton.setAttribute('aria-expanded', 'true');
      document.body.style.overflow = 'hidden';
      textMenuMobile.innerText = 'Close Menu';
    } else if (visibility === 'true') {
      primaryNavigation.setAttribute('data-visible', 'false');
      navToggleButton.setAttribute('aria-expanded', 'false');
      document.body.style.overflow = 'scroll';
      textMenuMobile.innerText = 'Open Menu';
    }
  });

  linksNavigation.forEach((link) => {
    link.addEventListener('click', () => {
      const visibility = primaryNavigation.getAttribute('data-visible');

      if (visibility === 'true') {
        primaryNavigation.setAttribute('data-visible', 'false');
        navToggleButton.setAttribute('aria-expanded', 'false');
        document.body.style.overflow = 'scroll';
        textMenuMobile.innerText = 'Open Menu';
      }
    });
  });
</script>
